{"ast":null,"code":"var _jsxFileName = \"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFeedFriend/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport TimeAgo from 'react-timeago';\nimport { Link } from 'react-router-dom';\nimport englishStrings from 'react-timeago/lib/language-strings/en';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport FeedLikeButton from '../FeedLikeButton';\nconst formatter = buildFormatter(englishStrings);\n\nfunction FeedFeedFriend(props) {\n  const [friend_posts, setFriendPosts] = useState();\n  const posts = props.PostsReducer;\n\n  if (posts.postitems.length > 0 && friend_posts === undefined) {\n    const currentFriendPosts = posts.postitems.filter(post => post.user.logged_in_user_is_friends);\n    setFriendPosts(currentFriendPosts);\n  }\n\n  const updateLikedPosts = post_id => {\n    const newFriendPosts = friend_posts.filter(post => post.id !== parseInt(post_id));\n    setFriendPosts(newFriendPosts);\n  };\n\n  if (friend_posts === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Loading ...\");\n  } else if (friend_posts.length === 0) {\n    return React.createElement(\"div\", {\n      className: \"posts_like_feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_like_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"friend_empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"It looks like none of your friends have posted yet..\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Want to connect with more people?\"), React.createElement(\"button\", {\n      id: \"go_get_friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Find Friends\")))));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"posts_like_feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_like_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, friend_posts.map(post => React.createElement(\"div\", {\n      className: \"post_container\",\n      id: post.id,\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, post.user.avatar ? React.createElement(\"img\", {\n      src: post.user.avatar,\n      alt: post.user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/blank_avatar.png'),\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, post.user.first_name, \" \", post.user.last_name, React.createElement(TimeAgo, {\n      date: post.created,\n      formatter: formatter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"post_content\",\n      onClick: e => props.fullPostHandler(e, post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, post.content), React.createElement(\"div\", {\n      className: \"post_images\",\n      onClick: e => props.fullPostHandler(e, post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, post.images[0] ? React.createElement(\"img\", {\n      src: post.images[0].image,\n      alt: post.images[0].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), post.images[1] ? React.createElement(\"img\", {\n      src: post.images[1].image,\n      alt: post.images[1].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), post.images[2] ? React.createElement(\"img\", {\n      src: post.images[2].image,\n      alt: post.images[2].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), post.images[3] ? React.createElement(\"img\", {\n      src: post.images[3].image,\n      alt: post.images[3].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"post_footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FeedLikeButton, {\n      props: props,\n      post: post,\n      updateLikedPosts: updateLikedPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))))));\n  }\n}\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStateToProps)(FeedFeedFriend);","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFeedFriend/index.js"],"names":["React","useState","connect","TimeAgo","Link","englishStrings","buildFormatter","FeedLikeButton","formatter","FeedFeedFriend","props","friend_posts","setFriendPosts","posts","PostsReducer","postitems","length","undefined","currentFriendPosts","filter","post","user","logged_in_user_is_friends","updateLikedPosts","post_id","newFriendPosts","id","parseInt","map","avatar","require","first_name","last_name","created","e","fullPostHandler","content","images","image","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './index.css';\nimport {connect} from 'react-redux';\nimport TimeAgo from 'react-timeago'\nimport {Link} from 'react-router-dom';\nimport englishStrings from 'react-timeago/lib/language-strings/en'\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\nimport FeedLikeButton from '../FeedLikeButton';\n \nconst formatter = buildFormatter(englishStrings)\n\nfunction FeedFeedFriend(props) {\n    const [friend_posts, setFriendPosts] = useState();\n\n    const posts = props.PostsReducer;\n        if (posts.postitems.length > 0 && friend_posts === undefined) { \n            const currentFriendPosts = posts.postitems.filter(post => post.user.logged_in_user_is_friends);\n            setFriendPosts(currentFriendPosts);\n        }\n        \n    const updateLikedPosts = (post_id) => {\n        const newFriendPosts = friend_posts.filter(post => post.id !== parseInt(post_id));\n        setFriendPosts(newFriendPosts);\n    }\n\n    if(friend_posts === undefined ){\n        return (\n            <div>Loading ...</div>\n                ) \n        } else if (friend_posts.length === 0) {\n            return(\n                <div className=\"posts_like_feed\">\n                    <div className=\"post_like_container\">\n                    <div className=\"friend_empty\">\n                        <p>It looks like none of your friends have posted yet..</p>\n                        <p>Want to connect with more people?</p>\n                        <button id=\"go_get_friends\"><Link to=\"/friends\">Find Friends</Link></button>\n                    </div>\n                    </div>\n                </div>\n            )\n        }\n        \n        else {\n            return (\n                <div className=\"posts_like_feed\">\n                    <div className=\"post_like_container\">\n                    {friend_posts.map(post => \n                        <div className=\"post_container\" id={post.id} key={post.id} >\n                            <div className=\"post_header\">\n                                {post.user.avatar ? <img src={post.user.avatar} alt={post.user.avatar}/> :<img src={require('../../assets/images/blank_avatar.png')} alt={\"avatar\"}/>}    \n                                <div className=\"post_name\"> \n                                    {post.user.first_name} {post.user.last_name}\n                                    <TimeAgo date={post.created} formatter={formatter} />\n                                </div>\n                            </div>\n                            <div className=\"post_content\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                {post.content}\n                                </div>\n\n                                <div className=\"post_images\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                    {post.images[0] ?  <img src={post.images[0].image} alt={post.images[0].image}/> : <div></div> } \n                                    {post.images[1] ?  <img src={post.images[1].image} alt={post.images[1].image}/> : <div></div> } \n                                    {post.images[2] ?  <img src={post.images[2].image} alt={post.images[2].image}/> : <div></div> } \n                                    {post.images[3] ?  <img src={post.images[3].image} alt={post.images[3].image}/> : <div></div> }             \n                            </div>\n                            <div className=\"post_footer\">\n                                <FeedLikeButton \n                                props={props}\n                                post={post}\n                                updateLikedPosts={updateLikedPosts}\n                                />\n                            </div>\n                        </div>)}\n                </div>\n                </div>\n            )}   \n    }\n\n\nconst mapStateToProps = state => {\n    return {\n        ...state,\n      };\n    };   \n\nexport default connect(mapStateToProps)(FeedFeedFriend);       \n\n"]},"metadata":{},"sourceType":"module"}