{"ast":null,"code":"import { userdata } from \"../../types\";\nexport const getUserAction = data => ({\n  type: userdata,\n  payload: data\n});\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/users/me/`;\n\nconst getUserFunction = props => dispatch => {\n  const token = props.SignInReducer.token;\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  });\n  const config = {\n    method: 'GET',\n    headers\n  };\n  fetch(URL, config).then(res => res.json()).then(data => {\n    dispatch(getUserAction(data));\n  });\n};\n\nexport default getUserFunction;","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/store/actions/getUserAction/index.js"],"names":["userdata","getUserAction","data","type","payload","URL","getUserFunction","props","dispatch","token","SignInReducer","headers","Headers","config","method","fetch","then","res","json"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,aAAvB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEH,QAD8B;AAEpCI,EAAAA,OAAO,EAAEF;AAF2B,CAAX,CAAtB;AAKP,MAAMG,GAAG,GAAI,0DAAb;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAYC,QAAD,IAAc;AAC7C,QAAMC,KAAK,GAAGF,KAAK,CAACG,aAAN,CAAoBD,KAAlC;AACA,QAAME,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB,kBADQ;AAExB,qBAAkB,UAASH,KAAM;AAFT,GAAZ,CAAhB;AAKA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXH,IAAAA;AAFW,GAAf;AAKAI,EAAAA,KAAK,CAACV,GAAD,EAAMQ,MAAN,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMd,IAAI,IAAI;AACVM,IAAAA,QAAQ,CAACP,aAAa,CAACC,IAAD,CAAd,CAAR;AACH,GAJD;AAKH,CAjBD;;AAkBA,eAAeI,eAAf","sourcesContent":["import {userdata} from \"../../types\";\n\nexport const getUserAction = (data) => ({\n    type: userdata,\n    payload: data,\n});\n\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/users/me/`;\n\nconst getUserFunction = (props) => (dispatch) => {  \n    const token = props.SignInReducer.token\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    });\n\n    const config = {\n        method: 'GET',\n        headers\n    };\n \n    fetch(URL, config)\n    .then(res => res.json())\n    .then(data => {\n        dispatch(getUserAction(data));\n    })\n};\nexport default getUserFunction;"]},"metadata":{},"sourceType":"module"}