{"ast":null,"code":"var _jsxFileName = \"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedBody/index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\nimport FeedNewPost from '../FeedNewPost';\nimport { newPostPopUpFunction } from \"../../store/actions/newPostPopUpAction\";\nimport { closePostPopUpFunction } from \"../../store/actions/closePostPopUpAction\";\nimport { fullPostFunction } from '../../store/actions/fullPostAction';\nimport { closeFullPostFunction } from '../../store/actions/closeFullPostAction';\nimport FeedFeed from '../FeedFeed';\nimport FeedYourPosts from '../FeedYourPosts';\nimport FeedFullPost from '../FeedFullPost';\n\nfunction FeedBody(props) {\n  const [content, setContent] = useState(' ');\n\n  const newPostPopUpHandler = (e, content) => {\n    e.preventDefault();\n    const data = {\n      content\n    };\n    props.dispatch(newPostPopUpFunction(data));\n  };\n\n  const closePopUpHandler = () => {\n    props.dispatch(closePostPopUpFunction());\n  };\n\n  const fullPostHandler = (e, post) => {\n    e.preventDefault();\n    props.dispatch(fullPostFunction(post));\n  };\n\n  const closeFullPostHandler = () => {\n    props.dispatch(closeFullPostFunction());\n  };\n\n  const greeting = \"What's on your mind, \" + props.UserReducer.user.first_name;\n  return React.createElement(\"div\", {\n    className: \"feed_body_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed_body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed_body_left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed_new_post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require('../../assets/images/users/jennifer.png'),\n    alt: \"profile pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"feed_new_post_form\",\n    onSubmit: newPostPopUpHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"new_post\",\n    placeholder: greeting,\n    type: \"text\",\n    onChange: e => {\n      setContent(e.currentTarget.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require('../../assets/images/send_posts.png'),\n    alt: \"send\",\n    onClick: e => newPostPopUpHandler(e, content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.showNewPostPopUp ? React.createElement(FeedNewPost, {\n    closePopUp: closePopUpHandler,\n    props: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.showFullPost ? React.createElement(FeedFullPost, {\n    closeFullPostHandler: closeFullPostHandler,\n    fullPostHandler: fullPostHandler,\n    props: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : null)), React.createElement(FeedYourPosts, {\n    props: props,\n    fullPostHandler: fullPostHandler,\n    closeFullPostHandler: closeFullPostHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"feed_body_right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FeedFeed, {\n    props: props,\n    fullPostHandler: fullPostHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return { ...state,\n    showNewPostPopUp: state.FeedReducer.showNewPostPopUp,\n    content: state.FeedReducer.content,\n    showFullPost: state.FeedReducer.showFullPost\n  };\n};\n\nexport default connect(mapStateToProps)(FeedBody);","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedBody/index.js"],"names":["React","useState","connect","FeedNewPost","newPostPopUpFunction","closePostPopUpFunction","fullPostFunction","closeFullPostFunction","FeedFeed","FeedYourPosts","FeedFullPost","FeedBody","props","content","setContent","newPostPopUpHandler","e","preventDefault","data","dispatch","closePopUpHandler","fullPostHandler","post","closeFullPostHandler","greeting","UserReducer","user","first_name","require","currentTarget","value","showNewPostPopUp","showFullPost","mapStateToProps","state","FeedReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,oBAAR,QAAmC,wCAAnC;AACA,SAAQC,sBAAR,QAAqC,0CAArC;AACA,SAAQC,gBAAR,QAA+B,oCAA/B;AACA,SAAQC,qBAAR,QAAoC,yCAApC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,GAAD,CAAtC;;AAEA,QAAMc,mBAAmB,GAAG,CAACC,CAAD,EAAGH,OAAH,KAAe;AACvCG,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACTL,MAAAA;AADS,KAAb;AAGAD,IAAAA,KAAK,CAACO,QAAN,CAAef,oBAAoB,CAACc,IAAD,CAAnC;AACD,GANH;;AAQA,QAAME,iBAAiB,GAAG,MAAM;AAC5BR,IAAAA,KAAK,CAACO,QAAN,CAAed,sBAAsB,EAArC;AACD,GAFH;;AAIA,QAAMgB,eAAe,GAAG,CAACL,CAAD,EAAGM,IAAH,KAAY;AAChCN,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,KAAK,CAACO,QAAN,CAAeb,gBAAgB,CAACgB,IAAD,CAA/B;AACD,GAHH;;AAKE,QAAMC,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,KAAK,CAACO,QAAN,CAAeZ,qBAAqB,EAApC;AACD,GAFD;;AAIC,QAAMiB,QAAQ,GAAI,0BAA0BZ,KAAK,CAACa,WAAN,CAAkBC,IAAlB,CAAuBC,UAAnE;AACD,SACM;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEC,OAAO,CAAC,wCAAD,CAAjB;AAA6D,IAAA,GAAG,EAAC,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,QAAQ,EAAEb,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,WAAW,EAAES,QAAvC;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAA6D,IAAA,QAAQ,EAAGR,CAAD,IAAO;AAACF,MAAAA,UAAU,CAACE,CAAC,CAACa,aAAF,CAAgBC,KAAjB,CAAV;AAAkC,KAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAK,IAAA,GAAG,EAAEF,OAAO,CAAC,oCAAD,CAAjB;AAAyD,IAAA,GAAG,EAAC,MAA7D;AAAoE,IAAA,OAAO,EAAGZ,CAAD,IAAKD,mBAAmB,CAACC,CAAD,EAAGH,OAAH,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,CAFA,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACmB,gBAAN,GACD,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEX,iBADd;AAEE,IAAA,KAAK,EAAER,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAKG,IANN,CAPJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACoB,YAAN,GACD,oBAAC,YAAD;AACC,IAAA,oBAAoB,EAAET,oBADvB;AAEC,IAAA,eAAe,EAAEF,eAFlB;AAGC,IAAA,KAAK,EAAET,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAMG,IAPN,CAfJ,CADJ,EA0BE,oBAAC,aAAD;AACA,IAAA,KAAK,EAAEA,KADP;AAEA,IAAA,eAAe,EAAES,eAFjB;AAGA,IAAA,oBAAoB,EAAEE,oBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADJ,EAiCI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACA,IAAA,KAAK,EAAEX,KADP;AAEA,IAAA,eAAe,EAAES,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjCJ,CADJ,CADN;AA4CD;;AAEL,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EACL,GAAGA,KADE;AAEHH,IAAAA,gBAAgB,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,gBAFjC;AAGHlB,IAAAA,OAAO,EAAEqB,KAAK,CAACC,WAAN,CAAkBtB,OAHxB;AAIHmB,IAAAA,YAAY,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAJ7B,GAAP;AAOC,CARL;;AAUA,eAAe9B,OAAO,CAAC+B,eAAD,CAAP,CAAyBtB,QAAzB,CAAf","sourcesContent":["import React,{useState}  from 'react';\nimport {connect} from 'react-redux';\nimport './index.css';\nimport FeedNewPost from '../FeedNewPost';\nimport {newPostPopUpFunction} from \"../../store/actions/newPostPopUpAction\";\nimport {closePostPopUpFunction} from \"../../store/actions/closePostPopUpAction\";\nimport {fullPostFunction} from '../../store/actions/fullPostAction';\nimport {closeFullPostFunction} from '../../store/actions/closeFullPostAction';\nimport FeedFeed from '../FeedFeed';\nimport FeedYourPosts from '../FeedYourPosts'; \nimport FeedFullPost from '../FeedFullPost';\n\nfunction FeedBody(props) {    \n    const [content, setContent] = useState(' '); \n\n    const newPostPopUpHandler = (e,content) => {\n        e.preventDefault();\n        const data = {\n            content,\n        };\n        props.dispatch(newPostPopUpFunction(data));\n      } \n\n    const closePopUpHandler = () => {\n        props.dispatch(closePostPopUpFunction());\n      } \n   \n    const fullPostHandler = (e,post) => {\n        e.preventDefault();\n        props.dispatch(fullPostFunction(post));\n      }  \n    \n      const closeFullPostHandler = () => {\n        props.dispatch(closeFullPostFunction());\n      } \n\n       const greeting =  \"What's on your mind, \" + props.UserReducer.user.first_name;\n      return(\n            <div className=\"feed_body_container\">\n                <div className=\"feed_body\">\n                    <div className=\"feed_body_left\">\n                        <div className=\"feed_new_post\">\n                            <img src={require('../../assets/images/users/jennifer.png')} alt=\"profile pic\" />\n                            <form className=\"feed_new_post_form\" onSubmit={newPostPopUpHandler}>\n                            <textarea name='new_post' placeholder={greeting} type='text' onChange={(e) => {setContent(e.currentTarget.value)}} ></textarea>\n                            <button><img src={require('../../assets/images/send_posts.png')} alt=\"send\" onClick={(e)=>newPostPopUpHandler(e,content)}/>\n                            </button>\n                            </form>\n                            <div>\n                              {props.showNewPostPopUp ?  \n                              <FeedNewPost \n                                closePopUp={closePopUpHandler}  \n                                props={props}\n                                />  \n                                : null  }  \n                            </div>  \n                            <div>\n                              {props.showFullPost ?  \n                              <FeedFullPost \n                               closeFullPostHandler={closeFullPostHandler}  \n                               fullPostHandler={fullPostHandler}\n                               props={props}\n                                />  \n                                : null  }  \n                            </div> \n                        </div>\n                      <FeedYourPosts \n                      props={props}\n                      fullPostHandler={fullPostHandler}\n                      closeFullPostHandler={closeFullPostHandler}  \n                      />\n                    </div>\n                    <div className=\"feed_body_right\">\n                      <FeedFeed \n                      props={props}\n                      fullPostHandler={fullPostHandler}\n                      />\n                    </div>\n                </div>\n            </div>\n            )\n    } \n    \nconst mapStateToProps = state => {\n    return {\n      ...state,\n        showNewPostPopUp: state.FeedReducer.showNewPostPopUp,\n        content: state.FeedReducer.content,\n        showFullPost: state.FeedReducer.showFullPost,\n\n      };\n    };   \n\nexport default connect(mapStateToProps)(FeedBody);       \n"]},"metadata":{},"sourceType":"module"}