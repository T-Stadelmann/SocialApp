{"ast":null,"code":"import _objectSpread from\"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{connect}from'react-redux';export default function HOCVerify(WrappedComponent){function VerifyComponent(props){useEffect(function(){if(props.error===false&&props.verify===true){redirectUser();}},[props.error&&props.verify]);var redirectUser=function redirectUser(){props.history.push('/signin');};return React.createElement(WrappedComponent,props);}function mapStateToProps(state){return _objectSpread({},state,{verify:state.SignInReducer.verify,error:state.SignInReducer.error});}return connect(mapStateToProps)(VerifyComponent);};","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/HOC/HOCVerify/index.js"],"names":["React","useEffect","connect","HOCVerify","WrappedComponent","VerifyComponent","props","error","verify","redirectUser","history","push","mapStateToProps","state","SignInReducer"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,gBAAnB,CAAqC,CAChD,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5BL,SAAS,CAAC,UAAM,CACZ,GAAIK,KAAK,CAACC,KAAN,GAAgB,KAAhB,EAAyBD,KAAK,CAACE,MAAN,GAAiB,IAA9C,CAAoD,CACpDC,YAAY,GACX,CACJ,CAJQ,CAIN,CAACH,KAAK,CAACC,KAAN,EAAeD,KAAK,CAACE,MAAtB,CAJM,CAAT,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,SAAnB,EACH,CAFD,CAIA,MAAO,qBAAC,gBAAD,CAAsBL,KAAtB,CAAP,CACH,CAED,QAASM,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,wBACOA,KADP,EAEIL,MAAM,CAAEK,KAAK,CAACC,aAAN,CAAoBN,MAFhC,CAGID,KAAK,CAAEM,KAAK,CAACC,aAAN,CAAoBP,KAH/B,GAKH,CAED,MAAOL,CAAAA,OAAO,CAACU,eAAD,CAAP,CAAyBP,eAAzB,CAAP,CACH","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nexport default function HOCVerify(WrappedComponent) {\n    function VerifyComponent(props) {\n        useEffect(() => {\n            if (props.error === false && props.verify === true) {\n            redirectUser()\n            }\n        }, [props.error && props.verify]);\n\n        const redirectUser = () => {\n            props.history.push('/signin')\n        };\n\n        return <WrappedComponent {...props}/>\n    }\n\n    function mapStateToProps(state) {\n        return {\n            ...state,\n            verify: state.SignInReducer.verify,\n            error: state.SignInReducer.error\n        }\n    }\n\n    return connect(mapStateToProps)(VerifyComponent)\n}; "]},"metadata":{},"sourceType":"module"}