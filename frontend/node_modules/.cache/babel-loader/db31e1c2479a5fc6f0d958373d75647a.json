{"ast":null,"code":"import _objectSpread from\"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./index.css';import{connect}from'react-redux';import TimeAgo from'react-timeago';import{Link}from'react-router-dom';import englishStrings from'react-timeago/lib/language-strings/en';import buildFormatter from'react-timeago/lib/formatters/buildFormatter';import FeedLikeButton from'../FeedLikeButton';var formatter=buildFormatter(englishStrings);function FeedFeedFriend(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),friend_posts=_useState2[0],setFriendPosts=_useState2[1];var posts=props.PostsReducer;if(posts.postitems.length>0&&friend_posts===undefined){var currentFriendPosts=posts.postitems.filter(function(post){return post.user.logged_in_user_is_friends;});setFriendPosts(currentFriendPosts);}var updateLikedPosts=function updateLikedPosts(post_id){var newFriendPosts=friend_posts.filter(function(post){return post.id!==parseInt(post_id);});setFriendPosts(newFriendPosts);};if(friend_posts===undefined){return React.createElement(\"div\",null,\"Loading ...\");}else if(friend_posts.length===0){return React.createElement(\"div\",{className:\"posts_like_feed\"},React.createElement(\"div\",{className:\"post_like_container\"},React.createElement(\"div\",{className:\"friend_empty\"},React.createElement(\"p\",null,\"It looks like none of your friends have posted yet..\"),React.createElement(\"p\",null,\"Want to connect with more people?\"),React.createElement(\"button\",{id:\"go_get_friends\"},React.createElement(Link,{to:\"/friends\"},\"Find Friends\")))));}else{return React.createElement(\"div\",{className:\"posts_like_feed\"},React.createElement(\"div\",{className:\"post_like_container\"},friend_posts.map(function(post){return React.createElement(\"div\",{className:\"post_container\",id:post.id,key:post.id},React.createElement(\"div\",{className:\"post_header\"},post.user.avatar?React.createElement(\"img\",{src:post.user.avatar,alt:post.user.avatar}):React.createElement(\"img\",{src:require('../../assets/images/blank_avatar.png'),alt:\"avatar\"}),React.createElement(\"div\",{className:\"post_name\"},post.user.first_name,\" \",post.user.last_name,React.createElement(TimeAgo,{date:post.created,formatter:formatter}))),React.createElement(\"div\",{className:\"post_content\",onClick:function onClick(e){return props.fullPostHandler(e,post);}},post.content),React.createElement(\"div\",{className:\"post_images\",onClick:function onClick(e){return props.fullPostHandler(e,post);}},post.images[0]?React.createElement(\"img\",{src:post.images[0].image,alt:post.images[0].image}):React.createElement(\"div\",null),post.images[1]?React.createElement(\"img\",{src:post.images[1].image,alt:post.images[1].image}):React.createElement(\"div\",null),post.images[2]?React.createElement(\"img\",{src:post.images[2].image,alt:post.images[2].image}):React.createElement(\"div\",null),post.images[3]?React.createElement(\"img\",{src:post.images[3].image,alt:post.images[3].image}):React.createElement(\"div\",null)),React.createElement(\"div\",{className:\"post_footer\"},React.createElement(FeedLikeButton,{props:props,post:post,updateLikedPosts:updateLikedPosts})));})));}}var mapStateToProps=function mapStateToProps(state){return _objectSpread({},state);};export default connect(mapStateToProps)(FeedFeedFriend);","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFeedFriend/index.js"],"names":["React","useState","connect","TimeAgo","Link","englishStrings","buildFormatter","FeedLikeButton","formatter","FeedFeedFriend","props","friend_posts","setFriendPosts","posts","PostsReducer","postitems","length","undefined","currentFriendPosts","filter","post","user","logged_in_user_is_friends","updateLikedPosts","post_id","newFriendPosts","id","parseInt","map","avatar","require","first_name","last_name","created","e","fullPostHandler","content","images","image","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './index.css';\nimport {connect} from 'react-redux';\nimport TimeAgo from 'react-timeago'\nimport {Link} from 'react-router-dom';\nimport englishStrings from 'react-timeago/lib/language-strings/en'\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\nimport FeedLikeButton from '../FeedLikeButton';\n \nconst formatter = buildFormatter(englishStrings)\n\nfunction FeedFeedFriend(props) {\n    const [friend_posts, setFriendPosts] = useState();\n\n    const posts = props.PostsReducer;\n        if (posts.postitems.length > 0 && friend_posts === undefined) { \n            const currentFriendPosts = posts.postitems.filter(post => post.user.logged_in_user_is_friends);\n            setFriendPosts(currentFriendPosts);\n        }\n        \n    const updateLikedPosts = (post_id) => {\n        const newFriendPosts = friend_posts.filter(post => post.id !== parseInt(post_id));\n        setFriendPosts(newFriendPosts);\n    }\n\n    if(friend_posts === undefined ){\n        return (\n            <div>Loading ...</div>\n                ) \n        } else if (friend_posts.length === 0) {\n            return(\n                <div className=\"posts_like_feed\">\n                    <div className=\"post_like_container\">\n                    <div className=\"friend_empty\">\n                        <p>It looks like none of your friends have posted yet..</p>\n                        <p>Want to connect with more people?</p>\n                        <button id=\"go_get_friends\"><Link to=\"/friends\">Find Friends</Link></button>\n                    </div>\n                    </div>\n                </div>\n            )\n        }\n        \n        else {\n            return (\n                <div className=\"posts_like_feed\">\n                    <div className=\"post_like_container\">\n                    {friend_posts.map(post => \n                        <div className=\"post_container\" id={post.id} key={post.id} >\n                            <div className=\"post_header\">\n                                {post.user.avatar ? <img src={post.user.avatar} alt={post.user.avatar}/> :<img src={require('../../assets/images/blank_avatar.png')} alt={\"avatar\"}/>}    \n                                <div className=\"post_name\"> \n                                    {post.user.first_name} {post.user.last_name}\n                                    <TimeAgo date={post.created} formatter={formatter} />\n                                </div>\n                            </div>\n                            <div className=\"post_content\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                {post.content}\n                                </div>\n\n                                <div className=\"post_images\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                    {post.images[0] ?  <img src={post.images[0].image} alt={post.images[0].image}/> : <div></div> } \n                                    {post.images[1] ?  <img src={post.images[1].image} alt={post.images[1].image}/> : <div></div> } \n                                    {post.images[2] ?  <img src={post.images[2].image} alt={post.images[2].image}/> : <div></div> } \n                                    {post.images[3] ?  <img src={post.images[3].image} alt={post.images[3].image}/> : <div></div> }             \n                            </div>\n                            <div className=\"post_footer\">\n                                <FeedLikeButton \n                                props={props}\n                                post={post}\n                                updateLikedPosts={updateLikedPosts}\n                                />\n                            </div>\n                        </div>)}\n                </div>\n                </div>\n            )}   \n    }\n\n\nconst mapStateToProps = state => {\n    return {\n        ...state,\n      };\n    };   \n\nexport default connect(mapStateToProps)(FeedFeedFriend);       \n\n"]},"metadata":{},"sourceType":"module"}