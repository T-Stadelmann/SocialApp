{"ast":null,"code":"import{userdata}from\"../../types\";export var getUserAction=function getUserAction(data){return{type:userdata,payload:data};};var URL=\"https://tracey.propulsion-learn.ch/backend/api/users/me/\";var getUserFunction=function getUserFunction(props){return function(dispatch){var token=props.SignInReducer.token;var headers=new Headers({'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)});var config={method:'GET',headers:headers};fetch(URL,config).then(function(res){return res.json();}).then(function(data){dispatch(getUserAction(data));});};};export default getUserFunction;","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/store/actions/getUserAction/index.js"],"names":["userdata","getUserAction","data","type","payload","URL","getUserFunction","props","dispatch","token","SignInReducer","headers","Headers","config","method","fetch","then","res","json"],"mappings":"AAAA,OAAQA,QAAR,KAAuB,aAAvB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,QAAW,CACpCC,IAAI,CAAEH,QAD8B,CAEpCI,OAAO,CAAEF,IAF2B,CAAX,EAAtB,CAKP,GAAMG,CAAAA,GAAG,2DAAT,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAW,UAACC,QAAD,CAAc,CAC7C,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,aAAN,CAAoBD,KAAlC,CACA,GAAME,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CACxB,eAAgB,kBADQ,CAExB,iCAA2BH,KAA3B,CAFwB,CAAZ,CAAhB,CAKA,GAAMI,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,KADG,CAEXH,OAAO,CAAPA,OAFW,CAAf,CAKAI,KAAK,CAACV,GAAD,CAAMQ,MAAN,CAAL,CACCG,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAd,IAAI,CAAI,CACVM,QAAQ,CAACP,aAAa,CAACC,IAAD,CAAd,CAAR,CACH,CAJD,EAKH,CAjBuB,EAAxB,CAkBA,cAAeI,CAAAA,eAAf","sourcesContent":["import {userdata} from \"../../types\";\n\nexport const getUserAction = (data) => ({\n    type: userdata,\n    payload: data,\n});\n\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/users/me/`;\n\nconst getUserFunction = (props) => (dispatch) => {  \n    const token = props.SignInReducer.token\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    });\n\n    const config = {\n        method: 'GET',\n        headers\n    };\n \n    fetch(URL, config)\n    .then(res => res.json())\n    .then(data => {\n        dispatch(getUserAction(data));\n    })\n};\nexport default getUserFunction;"]},"metadata":{},"sourceType":"module"}