{"ast":null,"code":"var _jsxFileName = \"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFullPost/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport TimeAgo from 'react-timeago';\nimport englishStrings from 'react-timeago/lib/language-strings/en';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport LikePostFunction from '../../store/actions/LikePostAction';\nimport FeedPostMenu from '../FeedPostMenu';\nimport editPostMenuFunction from '../../store/actions/editPostMenuAction';\nimport sendEditPostFunction from '../../store/actions/sendEditPostAction';\nimport FeedDeletePost from '../FeedDeletePost';\nconst formatter = buildFormatter(englishStrings);\n\nfunction FeedFullPost(props) {\n  const [liked_count, setLikes] = useState(props.FeedReducer.postFullPopUp.liked_count);\n  const [logged_in_user_liked, setUserLiked] = useState(props.FeedReducer.postFullPopUp.logged_in_user_liked);\n  const [editPost, setEditPost] = useState(false);\n  const [text_content, setContent] = useState(props.FeedReducer.postFullPopUp.text_content);\n\n  const LikePostHandler = e => {\n    const post_id = e.target.id;\n    props.dispatch(LikePostFunction(props, post_id));\n\n    if (logged_in_user_liked === true) {\n      setLikes(liked_count - 1);\n      setUserLiked(!logged_in_user_liked);\n    } else {\n      setLikes(liked_count + 1);\n      setUserLiked(!logged_in_user_liked);\n    }\n  };\n\n  const editPostHandler = () => {\n    setEditPost(!editPost);\n    props.dispatch(editPostMenuFunction(props));\n  };\n\n  const sendEditPostHandler = (e, props, text_content) => {\n    e.preventDefault();\n    const data = {\n      images: [],\n      text_content: text_content\n    };\n    const post_id = props.FeedReducer.postFullPopUpID;\n    ;\n    props.dispatch(sendEditPostFunction(post_id, props, data));\n  };\n\n  const post_id = props.FeedReducer.postFullPopUpID;\n  const postArr = props.PostsReducer.postitems;\n  const current_user_id = props.UserReducer.user.id.toString();\n  const fullPost = postArr.filter(function (post) {\n    return post.id === post_id;\n  });\n\n  if (fullPost === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading ...\");\n  } else {\n    let author_id = fullPost[0].author.id.toString();\n    console.log('authorid', author_id);\n    console.log('current)user', current_user_id);\n    const is_author = author_id === current_user_id ? true : false;\n    console.log('is user', is_author);\n    return React.createElement(\"div\", {\n      className: \"pop_up_full_post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_post_close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => props.closeFullPostHandler(e, props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      className: \"pop_up_full_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, props.FeedReducer.deletePostMenu ? React.createElement(FeedDeletePost, {\n      props: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, fullPost[0].images[0] ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"pop_up_full_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: fullPost[0].images[0].image,\n      alt: fullPost[0].images[0].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pop_up_full_right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_header_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, fullPost[0].author.avatar ? React.createElement(\"img\", {\n      src: fullPost[0].user.avatar,\n      alt: fullPost[0].user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/blank_avatar.png'),\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_pop_up_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, fullPost[0].author.first_name, \" \", fullPost[0].author.last_name, React.createElement(TimeAgo, {\n      date: fullPost[0].posted_date,\n      formatter: formatter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"post_header_dots\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, is_author === true ? React.createElement(FeedPostMenu, {\n      props: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/send_button.png'),\n      alt: \"three dots\",\n      id: \"dots\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"pop_up_post_full_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, props.FeedReducer.editPostMenu ? React.createElement(React.Fragment, null, React.createElement(\"textarea\", {\n      name: \"new_post\",\n      type: \"text\",\n      defaultValue: text_content,\n      onChange: e => {\n        setContent(e.currentTarget.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_edit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit_edit_post\",\n      onClick: e => {\n        sendEditPostHandler(e, props, text_content);\n        editPostHandler();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"cancel_edit_post\",\n      onClick: () => editPostHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\"))) : text_content), React.createElement(\"div\", {\n      className: \"pop_up_full_footer_top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, liked_count, \" \", liked_count === 1 ? \"like\" : \"likes\")), React.createElement(\"div\", {\n      className: \"pop_up_full_footer_bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('../../assets/images/like.png'),\n      alt: \"like\",\n      id: fullPost[0].id,\n      onClick: e => LikePostHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"img\", {\n      src: require('../../assets/images/share.png'),\n      alt: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Share\"))))) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"pop_up_full_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hide_me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pop_up_full_right_no_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pop_up_full_header_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, fullPost[0].author.avatar ? React.createElement(\"img\", {\n      src: fullPost[0].author.avatar,\n      alt: fullPost[0].author.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/blank_avatar.png'),\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_pop_up_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, fullPost[0].author.first_name, \" \", fullPost[0].author.last_name, React.createElement(TimeAgo, {\n      date: fullPost[0].posted_date,\n      formatter: formatter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"post_header_dots\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, fullPost[0].is_from_logged_in_user ? React.createElement(FeedPostMenu, {\n      props: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/send_button.png'),\n      alt: \"three dots\",\n      id: \"dots\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"pop_up_post_full_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, props.FeedReducer.editPostMenu ? React.createElement(React.Fragment, null, React.createElement(\"textarea\", {\n      name: \"new_post\",\n      type: \"text\",\n      defaultValue: text_content,\n      onChange: e => {\n        setContent(e.currentTarget.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_edit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit_edit_post\",\n      onClick: e => {\n        sendEditPostHandler(e, props, text_content);\n        editPostHandler();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"cancel_edit_post\",\n      onClick: () => editPostHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Cancel\"))) : text_content), React.createElement(\"div\", {\n      className: \"pop_up_full_footer_top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, liked_count, \" \", liked_count === 1 ? \"like\" : \"likes\")), React.createElement(\"div\", {\n      className: \"pop_up_full_footer_bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('../../assets/images/like.png'),\n      alt: \"like\",\n      id: fullPost[0].id,\n      onClick: e => LikePostHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Like\"), React.createElement(\"img\", {\n      src: require('../../assets/images/share.png'),\n      alt: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Share\")))))))));\n  }\n}\n\nconst mapStateToProps = state => {\n  return { ...state,\n    content: state.content\n  };\n};\n\nexport default connect(mapStateToProps)(FeedFullPost);","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFullPost/index.js"],"names":["React","useState","connect","TimeAgo","englishStrings","buildFormatter","LikePostFunction","FeedPostMenu","editPostMenuFunction","sendEditPostFunction","FeedDeletePost","formatter","FeedFullPost","props","liked_count","setLikes","FeedReducer","postFullPopUp","logged_in_user_liked","setUserLiked","editPost","setEditPost","text_content","setContent","LikePostHandler","e","post_id","target","id","dispatch","editPostHandler","sendEditPostHandler","preventDefault","data","images","postFullPopUpID","postArr","PostsReducer","postitems","current_user_id","UserReducer","user","toString","fullPost","filter","post","undefined","author_id","author","console","log","is_author","closeFullPostHandler","deletePostMenu","image","avatar","require","first_name","last_name","posted_date","editPostMenu","currentTarget","value","is_from_logged_in_user","mapStateToProps","state","content"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './index.css';\nimport {connect} from 'react-redux';\nimport TimeAgo from 'react-timeago';\nimport englishStrings from 'react-timeago/lib/language-strings/en';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport LikePostFunction from '../../store/actions/LikePostAction';\nimport FeedPostMenu from '../FeedPostMenu';\nimport editPostMenuFunction from '../../store/actions/editPostMenuAction';\nimport sendEditPostFunction from '../../store/actions/sendEditPostAction';\nimport FeedDeletePost from '../FeedDeletePost';\n\nconst formatter = buildFormatter(englishStrings)\n\nfunction FeedFullPost(props) {  \n    const [liked_count, setLikes] = useState(props.FeedReducer.postFullPopUp.liked_count);\n    const [logged_in_user_liked, setUserLiked] = useState(props.FeedReducer.postFullPopUp.logged_in_user_liked);\n    const [editPost,setEditPost] = useState(false);\n    const [text_content, setContent] = useState(props.FeedReducer.postFullPopUp.text_content);\n\n    const LikePostHandler = (e) => {       \n        const post_id = e.target.id;\n        props.dispatch(LikePostFunction(props,post_id));\n        if (logged_in_user_liked === true) {\n            setLikes(liked_count - 1);\n            setUserLiked(!logged_in_user_liked);\n        } else {\n            setLikes(liked_count + 1);\n            setUserLiked(!logged_in_user_liked);\n        }\n        } \n\n    const editPostHandler = () => { \n        setEditPost(!editPost);\n        props.dispatch(editPostMenuFunction(props));\n        }       \n    \n    const sendEditPostHandler = (e,props,text_content) => {\n         e.preventDefault();\n         const data = {\n            images: [],\n            text_content: text_content,\n\n        }\n        const post_id = props.FeedReducer.postFullPopUpID;;\n        props.dispatch(sendEditPostFunction(post_id,props,data));\n          }  \n\n     \n    const post_id = props.FeedReducer.postFullPopUpID;\n    const postArr = props.PostsReducer.postitems;\n    const current_user_id = props.UserReducer.user.id.toString()\n    const fullPost = postArr.filter(function (post){\n    return post.id === post_id\n                })\n        if(fullPost === undefined){\n            return (\n                <div>Loading ...</div>\n                    )\n        } else {\n            let author_id = fullPost[0].author.id.toString();\n            console.log('authorid',author_id);\n            console.log('current)user', current_user_id);\n            const is_author = author_id === current_user_id ? true : false\n            console.log('is user', is_author );\n             return (\n                <div className=\"pop_up_full_post\">\n                    <div className=\"pop_up_full_post_close\">\n                        <button onClick={(e) => props.closeFullPostHandler(e,props)}>X</button>                         \n                        <div className=\"pop_up_full_inner\">\n                        { props.FeedReducer.deletePostMenu ? \n                              <FeedDeletePost props={props}/> : \n                            <>    \n                            {fullPost[0].images[0] ?  \n                                <>\n                                <div className=\"pop_up_full_container\">\n                                   <div className=\"pop_up_full_left\">\n                                    <img src={fullPost[0].images[0].image} alt={fullPost[0].images[0].image}/>\n                                    </div> \n                                    <div className=\"pop_up_full_right\">\n                                        <div className=\"pop_up_full_header\">\n                                            <div className=\"pop_up_full_header_left\">\n                                                {fullPost[0].author.avatar ? <img src={fullPost[0].user.avatar} alt={fullPost[0].user.avatar}/> :<img src={require('../../assets/images/blank_avatar.png')} alt={\"avatar\"}/>}\n                                                <div className=\"post_pop_up_name\"> \n                                                    {fullPost[0].author.first_name} {fullPost[0].author.last_name}\n                                                    <TimeAgo date={fullPost[0].posted_date} formatter={formatter} />\n                                                </div>\n                                            </div>\n                                            <div className=\"post_header_dots\">  \n                                            { is_author === true?\n                                                <FeedPostMenu props={props}\n                                                />\n                                                :\n                                                <img src={require('../../assets/images/send_button.png')} alt=\"three dots\" id=\"dots\" />\n                                            }\n                                            </div>\n                                    </div>\n                                    <div className=\"pop_up_post_full_content\">\n                                    { props.FeedReducer.editPostMenu ? \n                                      <>\n                                      <textarea name='new_post' type='text' defaultValue={text_content} onChange={(e) => {setContent(e.currentTarget.value)}}></textarea>\n                                        <div className=\"post_edit_buttons\">\n                                        <button type=\"submit\" id=\"submit_edit_post\" onClick={(e) => {sendEditPostHandler(e,props,text_content);editPostHandler()}}>Submit</button>\n                                        <button type=\"submit\" id=\"cancel_edit_post\" onClick={() => editPostHandler()}>Cancel</button>\n                                        </div>\n                                        </>\n                                        : text_content}\n                                        </div>\n                                        <div className=\"pop_up_full_footer_top\">\n                                            <p>{liked_count} {liked_count ===1 ? \"like\" : \"likes\"}</p>\n                                        </div>\n                                        <div className=\"pop_up_full_footer_bottom\">\n                                            <img src={require('../../assets/images/like.png')} alt=\"like\" id={fullPost[0].id} onClick={(e)=>LikePostHandler(e)}/>\n                                            <p>Like</p>\n                                            <img src={require('../../assets/images/share.png')} alt=\"share\"/>   \n                                            <p>Share</p>\n                                        </div>         \n                                    </div>\n                                    </div>\n                                    </>\n                                    :\n                                    <>\n                                        <div className=\"pop_up_full_container\">\n                                            <div className=\"hide_me\">\n                                            </div>                            \n                                        <div className=\"pop_up_full_right_no_img\">\n                                            <div className=\"pop_up_full_header\">\n                                                <div className=\"pop_up_full_header_left\">\n                                                    {fullPost[0].author.avatar ? <img src={fullPost[0].author.avatar} alt={fullPost[0].author.avatar}/> :<img src={require('../../assets/images/blank_avatar.png')} alt={\"avatar\"}/>}\n                                                    <div className=\"post_pop_up_name\"> \n                                                        {fullPost[0].author.first_name} {fullPost[0].author.last_name}\n                                                        <TimeAgo date={fullPost[0].posted_date} formatter={formatter} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"post_header_dots\">   \n                                                { fullPost[0].is_from_logged_in_user ?  \n                                            <FeedPostMenu props={props}/>\n                                                :\n                                                <img src={require('../../assets/images/send_button.png')} alt=\"three dots\" id=\"dots\" />\n                                            }\n                                                </div>\n                                            </div>\n                                        <div className=\"pop_up_post_full_content\">\n                                        { props.FeedReducer.editPostMenu ? \n                                      <>\n                                      <textarea name='new_post' type='text' defaultValue={text_content} onChange={(e) => {setContent(e.currentTarget.value)}}></textarea>\n                                        <div className=\"post_edit_buttons\">\n                                        <button type=\"submit\" id=\"submit_edit_post\" onClick={(e) => {sendEditPostHandler(e,props,text_content);editPostHandler()}}>Submit</button>\n                                        <button type=\"submit\" id=\"cancel_edit_post\" onClick={() => editPostHandler()}>Cancel</button>\n                                        </div>\n                                        </>\n                                        : text_content}\n                                        </div>\n                                        <div className=\"pop_up_full_footer_top\">\n                                            <p>{liked_count} {liked_count ===1 ? \"like\" : \"likes\"}</p>\n                                        </div>\n                                        <div className=\"pop_up_full_footer_bottom\">\n                                            <img src={require('../../assets/images/like.png')} alt=\"like\" id={fullPost[0].id} onClick={(e)=>LikePostHandler(e)}/>\n                                            <p>Like</p>\n                                            <img src={require('../../assets/images/share.png')} alt=\"share\"/>   \n                                            <p>Share</p>\n                                        </div>         \n                                    </div>\n                                </div>\n                                </>\n                              }\n                              </>\n        }\n                        </div>\n                    </div>\n                </div>\n               )\n\n            }\n    }\n\nconst mapStateToProps = state => {\n    return {\n        ...state,\n        content: state.content,\n      };\n    };   \n\nexport default connect(mapStateToProps)(FeedFullPost);       "]},"metadata":{},"sourceType":"module"}