{"ast":null,"code":"import{newpost}from\"../../types\";export var newPostAction=function newPostAction(content){return{type:newpost,payload:content};};var URL=\"https://motion.propulsion-home.ch/backend/api/social/posts/\";export var newPostFunction=function newPostFunction(data,props){return function(dispatch){var token=props.SignInReducer.token;var headers=new Headers({'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)});var config={method:'POST',body:JSON.stringify(data),headers:headers};fetch(URL,config);var newPost=config.body;dispatch(newPostAction(newPost));};};","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/store/actions/newPostAction/index.js"],"names":["newpost","newPostAction","content","type","payload","URL","newPostFunction","data","props","dispatch","token","SignInReducer","headers","Headers","config","method","body","JSON","stringify","fetch","newPost"],"mappings":"AAAA,OAAQA,OAAR,KAAsB,aAAtB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,OAAO,QAAK,CACrCC,IAAI,CAAEH,OAD+B,CAErCI,OAAO,CAAEF,OAF4B,CAAL,EAA7B,CAMP,GAAMG,CAAAA,GAAG,8DAAT,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAMC,KAAN,QAAgB,UAACC,QAAD,CAAc,CACzD,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,aAAN,CAAoBD,KAAlC,CACA,GAAME,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CACxB,eAAgB,kBADQ,CAExB,iCAA2BH,KAA3B,CAFwB,CAAZ,CAAhB,CAKA,GAAMI,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,MADG,CAEXC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFK,CAGXK,OAAO,CAAPA,OAHW,CAAf,CAMAO,KAAK,CAACd,GAAD,CAAMS,MAAN,CAAL,CACA,GAAMM,CAAAA,OAAO,CAAGN,MAAM,CAACE,IAAvB,CACAP,QAAQ,CAACR,aAAa,CAACmB,OAAD,CAAd,CAAR,CACH,CAhB8B,EAAxB","sourcesContent":["import {newpost} from \"../../types\";\n\nexport const newPostAction = content => ({\n    type: newpost,\n    payload: content\n});\n\n\nconst URL = `https://motion.propulsion-home.ch/backend/api/social/posts/`;\n\nexport const newPostFunction = (data,props) => (dispatch) => {  \n    const token = props.SignInReducer.token\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    });\n\n    const config = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers\n    };\n\n    fetch(URL, config);\n    const newPost = config.body;\n    dispatch(newPostAction(newPost));\n};"]},"metadata":{},"sourceType":"module"}