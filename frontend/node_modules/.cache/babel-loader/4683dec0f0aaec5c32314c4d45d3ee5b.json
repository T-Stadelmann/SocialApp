{"ast":null,"code":"import{getfriends}from\"../../types\";export var getFriendsAction=function getFriendsAction(content){return{type:getfriends,payload:content};};var URL=\"https://tracey.propulsion-learn.ch/backend/api/users/\";var getFriendsFunction=function getFriendsFunction(props){return function(dispatch){var token=props.SignInReducer.token;var headers=new Headers({'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)});var config={method:'GET',headers:headers};fetch(URL,config).then(function(res){return res.json();}).then(function(data){var content=data;dispatch(getFriendsAction(content));});};};export default getFriendsFunction;","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/store/actions/getFriendsAction/index.js"],"names":["getfriends","getFriendsAction","content","type","payload","URL","getFriendsFunction","props","dispatch","token","SignInReducer","headers","Headers","config","method","fetch","then","res","json","data"],"mappings":"AAAA,OAAQA,UAAR,KAAyB,aAAzB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,OAAO,QAAK,CACxCC,IAAI,CAAEH,UADkC,CAExCI,OAAO,CAAEF,OAF+B,CAAL,EAAhC,CAMP,GAAMG,CAAAA,GAAG,wDAAT,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,QAAW,UAACC,QAAD,CAAc,CAChD,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,aAAN,CAAoBD,KAAlC,CACA,GAAME,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CACxB,eAAgB,kBADQ,CAExB,iCAA2BH,KAA3B,CAFwB,CAAZ,CAAhB,CAKA,GAAMI,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,KADG,CAEXH,OAAO,CAAPA,OAFW,CAAf,CAKAI,KAAK,CAACV,GAAD,CAAMQ,MAAN,CAAL,CACCG,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAG,IAAI,CAAI,CACV,GAAMjB,CAAAA,OAAO,CAAGiB,IAAhB,CACAX,QAAQ,CAACP,gBAAgB,CAACC,OAAD,CAAjB,CAAR,CACH,CALD,EAOH,CAnB0B,EAA3B,CAoBA,cAAeI,CAAAA,kBAAf","sourcesContent":["import {getfriends} from \"../../types\";\n\nexport const getFriendsAction = content => ({\n    type: getfriends,\n    payload: content\n});\n\n\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/users/`;\n\nconst getFriendsFunction = (props) => (dispatch) => {  \n    const token = props.SignInReducer.token\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    });\n\n    const config = {\n        method: 'GET',\n        headers\n    };\n\n    fetch(URL, config)\n    .then(res => res.json())\n    .then(data => {\n        const content = data;\n        dispatch(getFriendsAction(content));\n    })\n\n};\nexport default getFriendsFunction;"]},"metadata":{},"sourceType":"module"}