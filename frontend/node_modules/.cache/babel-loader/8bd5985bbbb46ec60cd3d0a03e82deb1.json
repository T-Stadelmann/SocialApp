{"ast":null,"code":"var _jsxFileName = \"/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFeedLike/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport TimeAgo from 'react-timeago';\nimport englishStrings from 'react-timeago/lib/language-strings/en';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport FeedLikeButton from '../FeedLikeButton';\nimport UpdatePostPageFunction from '../../store/actions/updatePostPageAction';\nimport getPostFunction from \"../../store/actions/getPostsAction\";\nimport getUserFunction from \"../../store/actions/getUserAction\";\nconst formatter = buildFormatter(englishStrings);\n\nfunction FeedFeedLike(props) {\n  const [liked_posts, setLikedPosts] = useState();\n  useEffect(() => {\n    props.dispatch(getFilteredPostFunction(props));\n    !props.UserReducer.id ? props.dispatch(getFilteredPostFunction(props)) : console.log('');\n  }, []);\n  const posts = props.PostsReducer.postitems;\n\n  const updateLikedPosts = post_id => {\n    const new_liked_posts = liked_posts.filter(post => post.id !== parseInt(post_id));\n    setLikedPosts(new_liked_posts);\n  };\n\n  const PostPageHandler = e => {\n    const newFeedState = \"POST_ALL\";\n    props.dispatch(UpdatePostPageFunction(newFeedState));\n  };\n\n  if (liked_posts === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading ...\");\n  } else if (liked_posts.length === 0) {\n    return React.createElement(\"div\", {\n      className: \"posts_like_feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_like_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"friend_empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"You haven't liked any posts yet..\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Want to find some more content?\"), React.createElement(\"button\", {\n      id: \"go_like_stuff\",\n      onClick: e => PostPageHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Find Posts\"))));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"posts_like_feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_like_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, liked_posts.map(post => React.createElement(\"div\", {\n      className: \"post_container\",\n      id: post.id,\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, post.author.avatar ? React.createElement(\"img\", {\n      src: post.author.avatar,\n      alt: post.author.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require('../../assets/images/blank_avatar.png'),\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"post_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, post.author.first_name, \" \", post.author.last_name, React.createElement(TimeAgo, {\n      date: post.posted_date,\n      formatter: formatter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"post_content\",\n      onClick: e => props.fullPostHandler(e, post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, post.text_content), React.createElement(\"div\", {\n      className: \"post_images\",\n      onClick: e => props.fullPostHandler(e, post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, post.images[0] ? React.createElement(\"img\", {\n      src: post.images[0].image,\n      alt: post.images[0].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), post.images[1] ? React.createElement(\"img\", {\n      src: post.images[1].image,\n      alt: post.images[1].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), post.images[2] ? React.createElement(\"img\", {\n      src: post.images[2].image,\n      alt: post.images[2].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), post.images[3] ? React.createElement(\"img\", {\n      src: post.images[3].image,\n      alt: post.images[3].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"post_footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FeedLikeButton, {\n      props: props,\n      post: post,\n      updateLikedPosts: updateLikedPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))))));\n  }\n}\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStateToProps)(FeedFeedLike);","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/components/FeedFeedLike/index.js"],"names":["React","useEffect","useState","Link","connect","TimeAgo","englishStrings","buildFormatter","FeedLikeButton","UpdatePostPageFunction","getPostFunction","getUserFunction","formatter","FeedFeedLike","props","liked_posts","setLikedPosts","dispatch","getFilteredPostFunction","UserReducer","id","console","log","posts","PostsReducer","postitems","updateLikedPosts","post_id","new_liked_posts","filter","post","parseInt","PostPageHandler","e","newFeedState","undefined","length","map","author","avatar","require","first_name","last_name","posted_date","fullPostHandler","text_content","images","image","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\n\nimport {connect} from 'react-redux';\nimport TimeAgo from 'react-timeago'\nimport englishStrings from 'react-timeago/lib/language-strings/en'\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\nimport FeedLikeButton from '../FeedLikeButton';\nimport UpdatePostPageFunction from '../../store/actions/updatePostPageAction'\nimport getPostFunction from \"../../store/actions/getPostsAction\";\nimport getUserFunction from \"../../store/actions/getUserAction\";\n\nconst formatter = buildFormatter(englishStrings)\n\nfunction FeedFeedLike(props) {\n    const [liked_posts, setLikedPosts] = useState();\n\n\n     useEffect(() => {\n        props.dispatch(getFilteredPostFunction(props));\n        !props.UserReducer.id ? props.dispatch(getFilteredPostFunction(props)) : console.log('');\n        }, []);\n\n    const posts = props.PostsReducer.postitems;\n\n\n    const updateLikedPosts = (post_id) => {\n        const new_liked_posts = liked_posts.filter(post => post.id !== parseInt(post_id));\n        setLikedPosts(new_liked_posts);\n    }\n\n\n    const PostPageHandler = (e) => {\n        const newFeedState = \"POST_ALL\";\n        props.dispatch(UpdatePostPageFunction(newFeedState));\n        \n    }\n\n    if(liked_posts === undefined ){\n        return (\n            <div>Loading ...</div>\n                ) \n        } else if (liked_posts.length === 0) {\n            return(\n                <div className=\"posts_like_feed\">\n                <div className=\"post_like_container\">\n                <div className=\"friend_empty\">\n                    <p>You haven't liked any posts yet..</p>\n                    <p>Want to find some more content?</p>\n                    <button id=\"go_like_stuff\" onClick={(e)=>PostPageHandler(e)}>Find Posts</button>\n                </div>\n                </div>\n            </div>\n            )\n        }\n        \n        else {\n            return (\n                <div className=\"posts_like_feed\">\n                    <div className=\"post_like_container\">\n                    {liked_posts.map(post => \n                        <div className=\"post_container\" id={post.id} key={post.id} >\n                            <div className=\"post_header\">\n                                {post.author.avatar ? <img src={post.author.avatar} alt={post.author.avatar}/> :<img src={require('../../assets/images/blank_avatar.png')} alt={\"avatar\"}/>}\n                                <div className=\"post_name\"> \n                                    {post.author.first_name} {post.author.last_name}\n                                    <TimeAgo date={post.posted_date} formatter={formatter} />\n                                </div>\n                            </div>\n                            <div className=\"post_content\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                {post.text_content}\n                                </div>\n\n                                <div className=\"post_images\" onClick={(e) => props.fullPostHandler(e,post)}>\n                                    {post.images[0] ?  <img src={post.images[0].image} alt={post.images[0].image}/> : <div></div> } \n                                    {post.images[1] ?  <img src={post.images[1].image} alt={post.images[1].image}/> : <div></div> } \n                                    {post.images[2] ?  <img src={post.images[2].image} alt={post.images[2].image}/> : <div></div> } \n                                    {post.images[3] ?  <img src={post.images[3].image} alt={post.images[3].image}/> : <div></div> }             \n                            </div>\n                            <div className=\"post_footer\">\n                                <FeedLikeButton \n                                props={props}\n                                post={post}\n                                updateLikedPosts={updateLikedPosts}\n                                />\n                            </div>\n                        </div>)}\n                </div>\n                </div>\n            )}   \n    }\n\n\nconst mapStateToProps = state => {\n    return {\n        ...state,\n      };\n    };   \n\nexport default connect(mapStateToProps)(FeedFeedLike);       \n\n"]},"metadata":{},"sourceType":"module"}