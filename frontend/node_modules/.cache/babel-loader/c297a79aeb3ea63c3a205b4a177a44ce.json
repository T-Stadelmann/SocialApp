{"ast":null,"code":"import { verify, verifyerror } from \"../../types\";\nimport React from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport { getFriendsAction } from \"../getFriendsAction\";\nexport const verifyAction = () => ({\n  type: verify\n});\nexport const verifyError = () => ({\n  type: verifyerror\n});\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/auth/registration/validation/`;\nexport const verifyFunction = (data, props) => dispatch => {\n  console.log(props);\n  const config = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  fetch(URL, config).then(res => res.json()).then(data => {\n    const response = data;\n    console.log(\"repsonse\", response);\n\n    if (response.status === 200 && response.data === \"Success!\") {\n      dispatch(verifyAction());\n      props.history.push('/signin');\n    } else {\n      dispatch(verifyError());\n      response.json().then(function (object) {\n        const errorArray = Object.values(object);\n        let errorStr = '';\n\n        for (let i = 0; i < errorArray.length; i++) {\n          errorStr = errorStr + \"\\r\\n \" + errorArray[i];\n        }\n\n        ;\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/tracey/Desktop/BootCamp/Week7/Day4/day4/frontend/src/store/actions/verifyAction/index.js"],"names":["verify","verifyerror","React","Redirect","getFriendsAction","verifyAction","type","verifyError","URL","verifyFunction","data","props","dispatch","console","log","config","method","body","JSON","stringify","headers","fetch","then","res","json","response","status","history","push","object","errorArray","Object","values","errorStr","i","length"],"mappings":"AAAA,SAAQA,MAAR,EAAeC,WAAf,QAAiC,aAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEN;AADyB,CAAP,CAArB;AAIP,OAAO,MAAMO,WAAW,GAAG,OAAO;AAC9BD,EAAAA,IAAI,EAAEL;AADwB,CAAP,CAApB;AAIP,MAAMO,GAAG,GAAI,8EAAb;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAMC,KAAN,KAAiBC,QAAD,IAAc;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAFK;AAGXU,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAHE,GAAf;AAKHC,EAAAA,KAAK,CAACb,GAAD,EAAMO,MAAN,CAAL,CACIO,IADJ,CACSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhB,EAEIF,IAFJ,CAESZ,IAAI,IAAI;AACV,UAAMe,QAAQ,GAAGf,IAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBW,QAAvB;;AACA,QAAIA,QAAQ,CAACC,MAAT,KAAkB,GAAlB,IAAyBD,QAAQ,CAACf,IAAT,KAAkB,UAA/C,EAA2D;AACvDE,MAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AACAM,MAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH,KAHD,MAGO;AACChB,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACAkB,MAAAA,QAAQ,CAACD,IAAT,GAAgBF,IAAhB,CAAqB,UAASO,MAAT,EAAiB;AACtC,cAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcH,MAAd,CAAnB;AACA,YAAII,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAEJ,UAAU,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCD,UAAAA,QAAQ,GAAGA,QAAQ,GAAG,OAAX,GAAqBH,UAAU,CAACI,CAAD,CAA1C;AACH;;AAAA;AAEJ,OAPG;AAQH;AACI,GAnBhB;AAoBI,CA3BE","sourcesContent":["import {verify,verifyerror} from \"../../types\";\nimport React from \"react\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport {getFriendsAction} from \"../getFriendsAction\";\n\nexport const verifyAction = () => ({\n    type: verify,\n});\n\nexport const verifyError = () => ({\n    type: verifyerror\n})\n\nconst URL = `https://tracey.propulsion-learn.ch/backend/api/auth/registration/validation/`;\n \nexport const verifyFunction = (data,props) => (dispatch) => {\n    console.log(props);\n    const config = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {'Content-Type': 'application/json'}\n    };\n fetch(URL, config)\n    .then(res => res.json())\n    .then(data => {\n        const response = data;\n        console.log(\"repsonse\",response)\n        if (response.status===200 && response.data === \"Success!\") {\n            dispatch(verifyAction());\n            props.history.push('/signin')\n        } else {\n                dispatch(verifyError());\n                response.json().then(function(object) {\n                const errorArray = Object.values(object);\n                let errorStr = '';   \n                for (let i=0; i <errorArray.length; i++) {\n                    errorStr = errorStr + \"\\r\\n \" + errorArray[i]; \n                };\n\n            })\n            }\n                })\n    }"]},"metadata":{},"sourceType":"module"}